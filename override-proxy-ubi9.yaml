---
apiVersion: v1
kind: ConfigMap
metadata:
  name: proxy-nginx-custom
  namespace: budibase
data:
  nginx.conf: |-
    # OpenShift-safe nginx.conf for Budibase proxy
    user                    nginx;
    error_log               stderr info;
    pid                     /tmp/nginx.pid;
    worker_processes        auto;
    worker_rlimit_nofile    33282;

    events {
      worker_connections  1024;
    }

    http {
      # rate limiting (static values; adjust if needed)
      limit_req_status 429;
      limit_req_zone $binary_remote_addr zone=ratelimit:10m rate=20r/s;
      limit_req_zone $binary_remote_addr zone=webhooks:10m rate=10r/s;

      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;
      proxy_set_header Host $host;
      charset utf-8;
      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      server_tokens off;
      types_hash_max_size 2048;

      # No 'resolver' directive here on purpose (we use static service DNS in proxy_pass).

      # Unprivileged temp paths
      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;

      # buffering
      client_header_buffer_size 1k;
      client_max_body_size 1000m;
      ignore_invalid_headers off;
      proxy_buffering off;

      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'response_time=$upstream_response_time proxy_host=$proxy_host upstream_addr=$upstream_addr';

      access_log /dev/stdout main;

      map $http_upgrade $connection_upgrade { default "upgrade"; }

      server {
        listen       10000 default_server;
        # If the node lacks IPv6, this harmlessly fails to bind; remove if needed:
        listen  [::]:10000 default_server;

        server_name  _;
        client_max_body_size 1000m;
        ignore_invalid_headers off;
        proxy_buffering off;

        error_page 502 503 504 /error.html;
        location = /error.html {
          root /usr/share/nginx/html;
          internal;
        }

        # Security Headers
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Health
        location /health {
          access_log off;
          add_header 'Content-Type' 'application/json';
          return 200 '{ "status": "OK" }';
        }

        # App
        location /app {
          proxy_http_version  1.1;
          proxy_set_header    Connection          $connection_upgrade;
          proxy_set_header    Upgrade             $http_upgrade;
          proxy_set_header    X-Real-IP           $remote_addr;
          proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
          proxy_set_header    Host                $host;
          proxy_pass          http://app-service:4002;
        }

        # Embed → /app
        location /embed {
          rewrite /embed/(.*) /app/$1  break;
          proxy_http_version  1.1;
          proxy_redirect     off;
          proxy_set_header    Connection          $connection_upgrade;
          proxy_set_header    Upgrade             $http_upgrade;
          proxy_set_header    X-Real-IP           $remote_addr;
          proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
          proxy_set_header    Host                $host;
          proxy_set_header    x-budibase-embed    "true";
          add_header x-budibase-embed "true";
          add_header Content-Security-Policy "frame-ancestors *";
          proxy_pass          http://app-service:4002;
        }

        # Root → apps (same as Budibase’s “/ = apps” behavior)
        location = / {
          proxy_http_version  1.1;
          proxy_set_header    Connection          $connection_upgrade;
          proxy_set_header    Upgrade             $http_upgrade;
          proxy_set_header    X-Real-IP           $remote_addr;
          proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
          proxy_set_header    Host                $host;
          proxy_pass          http://app-service:4002;
        }

        # Redirects for renamed routes
        location ~ ^/builder/portal/apps(/.*)?$ { return 301 $scheme://$host/builder/portal/workspaces$1; }
        location ~ ^/builder/app(/.*)?$ { return 301 $scheme://$host/builder/workspace$1; }

        # Builder/app_ → apps
        location ~ ^/(builder|app_) {
          proxy_http_version  1.1;
          proxy_set_header    Connection          $connection_upgrade;
          proxy_set_header    Upgrade             $http_upgrade;
          proxy_set_header    X-Real-IP           $remote_addr;
          proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
          proxy_set_header    Host                $host;
          proxy_pass          http://app-service:4002;
        }

        # Admin/system/global → worker
        location ~ ^/api/(system|admin|global)/ {
          proxy_set_header    Host                $host;
          proxy_buffering on;
          proxy_buffer_size 16k;
          proxy_buffers 4 32k;
          proxy_pass          http://worker-service:4003;
        }

        # Worker passthrough
        location /worker/ {
          proxy_set_header    Host                $host;
          proxy_pass          http://worker-service:4003;
          rewrite ^/worker/(.*)$ /$1 break;
        }

        # Backups → apps
        location /api/backups/ {
          limit_req zone=ratelimit burst=20 nodelay;
          proxy_read_timeout 120s;
          proxy_connect_timeout 120s;
          proxy_send_timeout 120s;
          proxy_http_version 1.1;
          proxy_set_header    Connection          $connection_upgrade;
          proxy_set_header    Upgrade             $http_upgrade;
          proxy_set_header    X-Real-IP           $remote_addr;
          proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
          proxy_pass          http://app-service:4002;
        }

        # API → apps
        location /api/ {
          limit_req zone=ratelimit burst=20 nodelay;
          proxy_read_timeout 120s;
          proxy_connect_timeout 120s;
          proxy_send_timeout 120s;
          proxy_http_version  1.1;
          proxy_set_header    Connection          $connection_upgrade;
          proxy_set_header    Upgrade             $http_upgrade;
          proxy_set_header    X-Real-IP           $remote_addr;
          proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
          proxy_set_header    Host                $host;
          proxy_pass          http://app-service:4002;
        }

        # Webhooks → apps (rate limited)
        location /api/webhooks/ {
          limit_req zone=webhooks nodelay;
          proxy_read_timeout 120s;
          proxy_connect_timeout 120s;
          proxy_send_timeout 120s;
          proxy_http_version  1.1;
          proxy_set_header    Connection          $connection_upgrade;
          proxy_set_header    Upgrade             $http_upgrade;
          proxy_set_header    X-Real-IP           $remote_addr;
          proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
          proxy_set_header    Host                $host;
          proxy_pass          http://app-service:4002;
        }

        # CouchDB (adjust service name if your Helm release name != "budibase")
        location /db/ {
          proxy_pass          http://budibase-svc-couchdb:5984;
          rewrite ^/db/(.*)$ /$1 break;
        }

        # WebSocket
        location /socket/ {
          proxy_http_version  1.1;
          proxy_set_header    Upgrade     $http_upgrade;
          proxy_set_header    Connection  'upgrade';
          proxy_set_header    Host        $host;
          proxy_cache_bypass  $http_upgrade;
          proxy_pass          http://app-service:4002;
        }

        # MinIO static
        location / {
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Host $http_host;
          proxy_connect_timeout 300;
          proxy_http_version 1.1;
          proxy_set_header Connection "";
          chunked_transfer_encoding off;
          proxy_pass          http://minio-service:9000;
        }

        # Signed files
        location /files/signed/ {
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Host minio-service;
          proxy_connect_timeout 300;
          proxy_http_version 1.1;
          proxy_set_header Connection "";
          chunked_transfer_encoding off;
          proxy_pass          http://minio-service:9000;
          rewrite ^/files/signed/(.*)$ /$1 break;
        }

        client_header_timeout 120;
        client_body_timeout   120;
        keepalive_timeout     120;

        # gzip
        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
      }

      # Note: removed the separate status server to avoid binding any extra ports.
    }
  error.html: |-
    <!doctype html><html><head><meta charset="utf-8"><title>Budibase</title></head>
    <body style="font-family:sans-serif;background:#1a1a1a;color:#e7e7e7;display:flex;justify-content:center;align-items:center;height:100vh;">
      <div><h1>Houston, we have a problem!</h1><p>Please try again later.</p></div>
    </body></html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy-service
  namespace: budibase
spec:
  template:
    spec:
      containers:
      - name: proxy-service
        image: registry.access.redhat.com/ubi9/nginx-124:latest
        imagePullPolicy: IfNotPresent
        command: ["/usr/sbin/nginx"]
        args: ["-g", "daemon off;", "-c", "/etc/nginx/nginx.conf"]
        ports:
        - containerPort: 10000
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        volumeMounts:
        - name: proxy-nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: proxy-nginx-conf
          mountPath: /usr/share/nginx/html/error.html
          subPath: error.html
      volumes:
      - name: proxy-nginx-conf
        configMap:
          name: proxy-nginx-custom
          items:
          - key: nginx.conf
            path: nginx.conf
          - key: error.html
            path: error.html